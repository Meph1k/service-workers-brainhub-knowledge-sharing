{"version":3,"sources":["service-worker.js"],"names":["cacheNames","cacheAssets","self","addEventListener","event","console","log","waitUntil","caches","open","then","cache","addAll","skipWaiting","keys","Promise","all","map","key","includes","delete","respondWith","fetch","request","response","catch","match","data","str","i","ports","postMessage","text","title","options","body","notificationPromise","registration","showNotification","tag","setTimeout"],"mappings":"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","file":"service-worker.map","sourceRoot":"..","sourcesContent":["const cacheNames = ['brainhub-v1'];\n\nconst cacheAssets = [\n  '/',\n  '/index.html',\n  '/kitten.4431d989.jpeg',\n  '/service-workers-project.e31bb0bc.js',\n  '/styles.8986bff4.css',\n];\n\nself.addEventListener('install', event => {\n  console.log('SW installed!')\n\n  event.waitUntil(\n    caches\n      .open(cacheNames[0])\n      .then(cache => {\n        console.log('cache: ', cache);\n        cache.addAll(cacheAssets);\n      })\n      .then(() => self.skipWaiting()) // prevents the waiting, meaning the service worker activates as soon as it's finished installing.\n  )\n});\n\nself.addEventListener('activate', event => {\n  console.log('SW activated!')\n\n  event.waitUntil(\n    caches.keys().then(keys => Promise.all(\n      keys.map(key => {\n        if (!cacheNames.includes(key)) {\n          return caches.delete(key);\n        }\n      })\n    )).then(() => {\n      console.log('brainhub-v1 is now ready to handle fetches!');\n    })\n  );\n});\n\nself.addEventListener('fetch', event => {\n  event.respondWith(\n    fetch(event.request)\n      .then(response => {\n        console.log('Fetched from server');\n\n        return response;\n      })\n      .catch(() => {\n        console.log('Fetch from server failed. Getting from cache...')\n\n        return caches.match(event.request);\n      })\n  )\n});\n\nself.addEventListener('message', event => {\n  console.log(\"SW Received Message: \" + event.data);\n  let str = '';\n  for (let i = 0; i < 1000000000; i++) {\n    if (i % 33333333 === 0) {\n      str += i >> i;\n    }\n  }\n  event.ports[0].postMessage(\"SW Says 'Hello back!'\" + str + 'a');\n});\n\nself.addEventListener('push', function(event) {\n  console.log('[Service Worker] Push Received.');\n  console.log(`[Service Worker] Push had this data: \"${event.data.text()}\"`);\n\n  const title = 'Push Codelab';\n  const options = {\n    body: 'Yay it works.',\n  };\n  const notificationPromise = self.registration.showNotification(title, options);\n  event.waitUntil(notificationPromise);\n});\n\nself.addEventListener('sync', function(event) {\n  if (event.tag === 'someTestSync') {\n    event.waitUntil(() => setTimeout(() => {\n      console.log('sync!')\n    }, 6000));\n  }\n});\n"]}